installed.packages('plotly')
install.packages('plotly')
install.packages('ggplot2')
install.packages('plotly')
library(ggplot2)
library(plotly)
pl<-ggplot(mtcars,aes(mpg,wt))+geom_point()
mpl<-ggplotly(pl)
mpl
print(mpl)
mpl<-ggplotly(mpl,p=ggplot2::last_plot())
pl<-ggplot(mtcars,aes(mpg,wt))+geom_point()
pl<-ggplot2(mtcars,aes(mpg,wt))+geom_point()
library(ggplot2)
library(plotly)
pl<-ggplot(mtcars,aes(mpg,wt))+geom_point()
print(pl)
mpl<-ggplotly(pl)
print(mpl)
mpl<- plot_ly(x=~pl,
type='histogram',
color=~code,
frame=~frame,
alpha=0.7)
print(mpl)
library(dplyr)
a<-mtcars
summary(a)
mtcars$rv<-mtcars$hp+mtcars$gear
mtcars
drop(mtcars$rv)
drop(mtcars$rv,)
drop(mtcars$rv)
mtcars
col(mtcars$rv)
col(-mtcars$rv)
col(drop(mtcars$rv))
a<-mtcars
summary(a0)
summary(a)
a$rv<-a$hp+a$gear
a
a<-subset(a,select = -c(rv))
a
height<-c(5.1,5.6,5.8,5.3,5.9,6.1)
height
weight<-c(55,62,61,58,65,54)
weight
data<-c(height,weight)
data
data<-as.data.frame(data)
adta
data
rm(data)
data<c(colnames(height)=height,colnames(weight)=weight)
model<-lm(weight~height)
summary(model)
a<-data.frame(x=6.3)
res<-predict(model,a)
res
rm(a,model)
rm(.)
rm(,)
x=c(5.2,5.9,5.7,5.6,5.5)
x
y=c(55,59,61,62,52)
y
model=lm(y~x)
a<-data.frame(x=6.1)
result<-predict(model,a)
result
result<-predict.lm(model,a)
result
rm(A)
rm(a,model)
a<-cars
View(a)
View(a)
View(a)
View(a)
carsmodel<-lm(dist~speed,a)
b1<-data.frame(speed=23)
result<-predict.lm(carsmodel,b1)
result
data.train<-read.csv('titanic_train.csv')
head(data.train)
colnames(data.train)
str(data.train)
#Data Analysis Using Ameliya
library(Amelia)
missmap(data.train,main="Missing Map 1",col = c('yellow','black'),legend = FALSE)
library(ggplot2)
#Survivors
pl<-ggplot(data.train,aes(Survived))+geom_bar()
print(pl)
#PClass
pl2<-ggplot(data.train,aes(Pclass))+geom_bar(aes(fill=factor(Pclass)))
print(pl2)
#Gender
pl3<-ggplot(data.train,aes(Sex))+geom_bar(aes(fill=factor(Sex)))
print(pl3)
#Age
pl4<-ggplot(data.train,aes(Age))+geom_histogram(alpha=.5,fill='blue',bins = 20)
print(pl4)
#SiblingsCOunt
pl5<-ggplot(data.train,aes(SibSp))+geom_bar(fill='red')
print(pl5)
#Fare
pl6<-ggplot(data.train,aes(Fare))+geom_histogram(bins = 20,alpha=.5,fill='Green',color='Black')
print(pl6)
#Class VS Age
pl7<-ggplot(data.train,aes(Pclass,Age))+geom_boxplot(aes(group=Pclass,fill=factor(Pclass),alpha=.4))+scale_y_continuous(breaks = seq(min(0),max(80),by=2))+theme_bw()
print(pl7)
#Imputation of age Based on class
impute_age <- function(age,class){
out <- age
for (i in 1:length(age)){
if (is.na(age[i])){
if (class[i] == 1){
out[i] <- 37
}else if (class[i] == 2){
out[i] <- 29
}else{
out[i] <- 24
}
}else{
out[i]<-age[i]
}
}
return(out)
}
########
fixed.ages <- impute_age(data.train$Age,data.train$Pclass)
print(fixed.ages)
data.train$Age <- fixed.ages
missmap(data.train,main='Imputation Check' ,col=c('yellow','black'),legend = FALSE)
##building Logistic Model
str(data.train)
head(data.train,3)
##select relevant coloum only
library(dplyr)
data.train<-select(data.train,-PassengerId,-Name,-Ticket,-Cabin)
print(head(data.train))
setwd("C:/Users/Ranvijay/Desktop/Titanic Problem")
data.train<-read.csv('titanic_train.csv')
head(data.train)
colnames(data.train)
str(data.train)
#Data Analysis Using Ameliya
library(Amelia)
missmap(data.train,main="Missing Map 1",col = c('yellow','black'),legend = FALSE)
library(ggplot2)
#Survivors
pl<-ggplot(data.train,aes(Survived))+geom_bar()
print(pl)
#PClass
pl2<-ggplot(data.train,aes(Pclass))+geom_bar(aes(fill=factor(Pclass)))
print(pl2)
#Gender
pl3<-ggplot(data.train,aes(Sex))+geom_bar(aes(fill=factor(Sex)))
print(pl3)
#Age
pl4<-ggplot(data.train,aes(Age))+geom_histogram(alpha=.5,fill='blue',bins = 20)
print(pl4)
#SiblingsCOunt
pl5<-ggplot(data.train,aes(SibSp))+geom_bar(fill='red')
print(pl5)
#Fare
pl6<-ggplot(data.train,aes(Fare))+geom_histogram(bins = 20,alpha=.5,fill='Green',color='Black')
print(pl6)
#Class VS Age
pl7<-ggplot(data.train,aes(Pclass,Age))+geom_boxplot(aes(group=Pclass,fill=factor(Pclass),alpha=.4))+scale_y_continuous(breaks = seq(min(0),max(80),by=2))+theme_bw()
print(pl7)
#Imputation of age Based on class
impute_age <- function(age,class){
out <- age
for (i in 1:length(age)){
if (is.na(age[i])){
if (class[i] == 1){
out[i] <- 37
}else if (class[i] == 2){
out[i] <- 29
}else{
out[i] <- 24
}
}else{
out[i]<-age[i]
}
}
return(out)
}
########
fixed.ages <- impute_age(data.train$Age,data.train$Pclass)
print(fixed.ages)
data.train$Age <- fixed.ages
missmap(data.train,main='Imputation Check' ,col=c('yellow','black'),legend = FALSE)
##building Logistic Model
str(data.train)
head(data.train,3)
##select relevant coloum only
library(dplyr)
data.train<-select(data.train,-PassengerId,-Name,-Ticket,-Cabin)
print(head(data.train))
str(data.train)
data.train$Pclass<-factor(data.train$Pclass)
data.train$Parch<-factor(data.train$Parch)
data.train$Survived<-factor(data.train$su)
data.train$Survived<-factor(data.train$Survived)
data.train$SibSp<-factor(data.train$SibSp)
str(data.train)
#Logistic Model
model<-glm(Survived~.,family = binomial(link = 'logit'),data = data.train)
summary(model)
summary(model)
##Test Set
install.packages('caTools')
library(caTools)
set.seed(101)
split<-sample.split(data.train$Survived,SplitRatio = 0.7)
final.train<-subset(data.train,split==TRUE)
final.test<-subset(data.train,split==FALSE)
final.log.model<-glm(predict(Survived~.,family=binomial(link = 'logit'),data=final.train)
summary(final.log.model)
final.log.model<-glm(Survived~.,family=binomial(link = 'logit'),data=final.train)
summary(final.log.model)
fitted.probabilities<-predict(final.log.model,final.test,type = 'response')
fitte.results<-ifelse(fitted.probabilities>0.5,1,0)
misClassError <-mean(fitted.results != final.test$Survived)
fitte.results<-ifelse(fitted.probabilities>0.5,1,0)
misClassError <-mean(fitted.results != final.test$Survived)
fitted.results<-ifelse(fitted.probabilities>0.5,1,0)
misClassError <-mean(fitted.results != final.test$Survived)
print(1- misClassError)
#Confusion Matrix
table(final.test$Survived,fitted.probabilities>0.5)
